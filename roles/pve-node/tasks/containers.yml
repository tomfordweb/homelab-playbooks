---
- name: Update PVE template list
  tags: ["template"]
  command: pveam update
  when: update_templates

- name: Find available templates
  tags: ["template"]
  shell: pveam available | awk '{print $2}'
  changed_when: false
  register: __all_templates
  when: update_templates

- name: Filter templates against available
  tags: ["template"]
  set_fact:
    __template_list: "{{ __template_list|default([]) + __all_templates.stdout_lines|select('search', item)|sort }}"
  with_items: "{{ lxc_templates }}"
  when: update_templates

- name: Download available templates
  when: update_templates
  shell: |
    pveam download {{ lxc_template_storage_location|default('local') }} {{ item }}
    creates={{ lxc_template_directory }}/{{ item }}
  with_items: "{{ __template_list }}"

- name: Stop containers for recreate
  tags: ["vm"]
  community.general.proxmox:
    vmid: "{{ item.vmid }}"
    api_host: "{{ item.api_host|default(lxc_defaults.api_host) }}"
    password: "{{ item.container_password|default(lxc_defaults.container_password) }}"
    api_user: "{{ item.auth.name|default(lxc_defaults.auth.name) }}"
    proxmox_default_behavior: "{{ item.proxmox_default_behavior|default(lxc_defaults.proxmox_default_behavior) }}"
    state: stopped
  with_items: "{{ pve_hosts }}"
  when: update_templates
  ignore_errors: yes

- name: Remove containers for recreate
  tags: ["vm"]
  community.general.proxmox:
    vmid: "{{ item.vmid }}"
    api_host: "{{ item.api_host|default(lxc_defaults.api_host) }}"
    password: "{{ item.container_password|default(lxc_defaults.container_password) }}"
    api_user: "{{ item.auth.name|default(lxc_defaults.auth.name) }}"
    proxmox_default_behavior: "{{ item.proxmox_default_behavior|default(lxc_defaults.proxmox_default_behavior) }}"
    state: absent
  with_items: "{{ pve_hosts }}"
  when: update_templates
  ignore_errors: yes

- name: Get a list of all a containers
  tags: ["cleanup"]
  shell: "pct list | awk '{print $1}'"
  changed_when: false
  register: __unused_pve_containers

- name: Stop unused containers for removal
  tags: ["cleanup"]
  community.general.proxmox:
    vmid: "{{ item | int }}"
    api_host: "{{ lxc_defaults.api_host }}"
    api_password: "{{ lxc_defaults.auth.password }}"
    api_user: "{{ lxc_defaults.auth.name }}"
    proxmox_default_behavior: "no_defaults"
    state: stopped
  with_items: "{{ __unused_pve_containers.stdout_lines }}"
  when: "item not in pve_hosts|map(attribute='vmid')"
  ignore_errors: yes

- name: Remove unsused containers
  tags: ["cleanup"]
  community.general.proxmox:
    vmid: "{{ item | int }}"
    api_host: "{{ lxc_defaults.api_host }}"
    api_password: "{{ lxc_defaults.auth.password }}"
    api_user: "{{ lxc_defaults.auth.name }}"
    proxmox_default_behavior: "{{ lxc_defaults.proxmox_default_behavior }}"
    state: absent
  with_items: "{{ __unused_pve_containers.stdout_lines }}"
  when: "item not in pve_hosts|map(attribute='vmid')"
  ignore_errors: yes

- name: Create the containers
  tags: ["vm"]
  community.general.proxmox:
    # Required values
    vmid: "{{ item.vmid }}"
    hostname: "{{ item.hostname }}"
    # Optional values, defaults to something sensible
    node: "{{ item.node_name|default(lxc_defaults.node) }}"
    api_host: "{{ item.api_host|default(lxc_defaults.api_host) }}"
    password: "{{ item.container_password|default(lxc_defaults.container_password) }}"
    api_user: "{{ item.auth.name|default(lxc_defaults.auth.name) }}"
    api_password: "{{ item.auth.password|default(lxc_defaults.auth.password) }}"
    onboot: "{{ item.onboot|default(lxc_defaults.onboot) }}"
    proxmox_default_behavior: "{{ item.proxmox_default_behavior|default(lxc_defaults.proxmox_default_behavior) }}"
    ostemplate: "{{ item.template|default(lxc_defaults.template) }}"
    features: "{{ item.features|default(lxc_defaults.features) }}"
    unprivileged: "{{ item.unprivileged|default(lxc_defaults.unprivileged) }}"
    disk: "{{ item.disk|default(lxc_defaults.disk) }}"
    cores: "{{ item.cores|default(lxc_defaults.cores) }}"
    cpus: "{{ item.cpus|default(lxc_defaults.cpus) }}"
    memory: "{{ item.memory|default(lxc_defaults.memory) }}"
    storage: "{{ item.storage|default(lxc_defaults.storage) }}"
    swap: "{{ item.swap|default(lxc_defaults.swap) }}"
    netif: "{{ item.netif|default(lxc_defaults.netif) }}"
    pubkey: "{{ item.ssh_key|default(lxc_defaults.ssh_key) }}"
  with_items: "{{ pve_hosts }}"

- name: Start newly created containers
  tags: ["vm"]
  community.general.proxmox:
    vmid: "{{ item.vmid }}"
    api_host: "{{ item.api_host|default(lxc_defaults.api_host) }}"
    api_user: "{{ item.auth.name|default(lxc_defaults.auth.name) }}"
    api_password: "{{ item.auth.password|default(lxc_defaults.auth.password) }}"
    proxmox_default_behavior: "{{ item.proxmox_default_behavior|default(lxc_defaults.proxmox_default_behavior) }}"
    state: started
  with_items: "{{ pve_hosts }}"

- import_tasks: get-container-private-ips.yml
  tags: ["debug"]
